# Default values for react-app-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: <$REPLICACOUNT>

image:
  repository: <$IMAGE_REPOSITORY>
  # repository: https://artifactrepo.server.ha.org.hk:55743/artifactory/int-docker-dev-chassis/msgbc-core-app/latest/
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: <$IMAGE_TAG>

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  enabled: true
  #name: pms-c1-app
  #externalPort: 5000
  #internalPort: 5000

ingress:
  #  enabled: false
  enabled: true
  className: ""
  annotations:
  #    haproxy.router.openshift.io/timeout: 60s
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: cdra-springboot-svc.tstcld61.server.ha.org.hk
      #- host: pms-c1-app-pms-aat.tstcld61.server.ha.org.hk
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

configmap:
  create: true
  data:
    SERVER_URL: ${vars.DEVLOPMENT_WORKFLOW_CONFIGMAP_SERVER_URL}
    dbconnection: jdbc:h2:mem:testdb

secret:
  create: true
  # base64 encoded secrets
  #data: {}
  data:
    backendUrl: aHR0cDovL2V4YW1wbGUuY29t
    dbcredential: ""

#dbmigrate:
#  enable: false
#  image: artifactrepo:55743/docker-dev-chassis/mybatis/migrations
#  tag: latest
#  command: "info"
#  arg: ""

paas:
  alert:
    projectcode: cdra

containers:
  livenessProbe:
    httpGet:
      path: /
      port: 5000
    periodSeconds: 10
    timeoutSeconds: 30
    initialDelaySeconds: 30
    failureThreshold: 15
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: /
      port: 5000
    periodSeconds: 10
    timeoutSeconds: 6
    initialDelaySeconds: 10
    failureThreshold: 15
    successThreshold: 1

dbmigrate:
  enable: false
  backoffLimit: 1
  restartPolicy: Never
  imagePullSecrets: []
  image:
    repository: artifactrepo.serverdev.hadev.org.hk:55743/docker-dev-cmschassis/mybatis/migrations
    tag: 3.3.9-postgresql
    pullPolicy: IfNotPresent
  command: |
    /bin/sh, -c
  args: |
    echo 'Mybatis Migrations';
  environment: development
  script-path : ""
  properties: []
  secret:
    name: dbmigrate-secret
  sharedVolume: migrations
  init:
    command: |
      /bin/sh, -c
    args: |
      mkdir /migration/scripts;
      cp /app/migrations/scripts/*.sql > /migration/scripts;
monitoring:
  enable: false
  persistenceVolume:
    name: hostpathcldlog
    claimName: ""
  logPath: ""
  applPath: ""

persistence:
  enable: false
  claimName: ""
  existingClaim: false
  accessMode: ReadWriteOnce
  size: 1Gi
  annotations: {}

env: []

initContainers:
  enable: false
  image: artifactrepo:55743/remote-docker/busybox
  volumeMounts: {}
  command: []
  args: []
